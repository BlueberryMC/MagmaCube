From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Thu, 5 Nov 2020 00:35:22 +0900
Subject: [PATCH] Fix Maths


diff --git a/src/main/java/com/mojang/blaze3d/vertex/VertexConsumer.java b/src/main/java/com/mojang/blaze3d/vertex/VertexConsumer.java
index 2cf40bc29bb9f2e4a615c72bc4f966a6210dd8cc..a9321926d5abb1e4980493117094ccb31590625f 100644
--- a/src/main/java/com/mojang/blaze3d/vertex/VertexConsumer.java
+++ b/src/main/java/com/mojang/blaze3d/vertex/VertexConsumer.java
@@ -77,9 +77,9 @@ public interface VertexConsumer
                 float green; // MagmaCube - rename
                 float blue; // MagmaCube - rename
                 if (debug9) {
-                    final float debug23 = (debug17.get(12) & 0xFF) / 255.0f;
-                    final float debug24 = (debug17.get(13) & 0xFF) / 255.0f;
-                    final float debug25 = (debug17.get(14) & 0xFF) / 255.0f;
+                    final float debug23 = (float)(debug17.get(12) & 0xFF) / 255.0f; // MagmaCube - decompile fix
+                    final float debug24 = (float)(debug17.get(13) & 0xFF) / 255.0f; // MagmaCube - decompile fix
+                    final float debug25 = (float)(debug17.get(14) & 0xFF) / 255.0f; // MagmaCube - decompile fix
                     red = debug23 * debug3[debug19] * debug4; // MagmaCube - rename
                     green = debug24 * debug3[debug19] * debug5; // MagmaCube - rename
                     blue = debug25 * debug3[debug19] * debug6; // MagmaCube - rename
diff --git a/src/main/java/com/mojang/math/Quaternion.java b/src/main/java/com/mojang/math/Quaternion.java
index 5c0a294049c980f73a05410a3065c392a9e7741d..4283393c68621745307cc1a4fa98f180ba9a55a6 100644
--- a/src/main/java/com/mojang/math/Quaternion.java
+++ b/src/main/java/com/mojang/math/Quaternion.java
@@ -19,7 +19,7 @@ public final class Quaternion
     
     public Quaternion(final Vector3f debug1, float debug2, final boolean debug3) {
         if (debug3) {
-            debug2 *= 0.017453292f;
+            debug2 *= ((float)Math.PI / 180F); // MagmaCube - decompile fix
         }
         final float debug4 = sin(debug2 / 2.0f);
         this.i = debug1.x() * debug4;
@@ -30,9 +30,9 @@ public final class Quaternion
     
     public Quaternion(float debug1, float debug2, float debug3, final boolean debug4) {
         if (debug4) {
-            debug1 *= 0.017453292f;
-            debug2 *= 0.017453292f;
-            debug3 *= 0.017453292f;
+            debug1 *= ((float)Math.PI / 180F); // MagmaCube - decompile fix
+            debug2 *= ((float)Math.PI / 180F); // MagmaCube - decompile fix
+            debug3 *= ((float)Math.PI / 180F); // MagmaCube - decompile fix
         }
         final float debug5 = sin(0.5f * debug1);
         final float debug6 = cos(0.5f * debug1);
diff --git a/src/main/java/net/minecraft/client/multiplayer/ClientPacketListener.java b/src/main/java/net/minecraft/client/multiplayer/ClientPacketListener.java
index e6c2eb79de86920d722df2e5f83ab0eeb2dc54f2..15c213553a597b9f9f840eaf4549bf247d4310db 100644
--- a/src/main/java/net/minecraft/client/multiplayer/ClientPacketListener.java
+++ b/src/main/java/net/minecraft/client/multiplayer/ClientPacketListener.java
@@ -2033,7 +2033,7 @@ implements ClientGamePacketListener {
             boolean debug11 = (debug5 & 1 << debug9) != 0;
             boolean debug12 = (debug6 & 1 << debug9) != 0; // MagmaCube - decompile fix - remove unused var
             if (!debug11 && !debug12) continue;
-            debug3.queueSectionData(debug4, SectionPos.of(debug1, debug10, debug2), debug11 ? new DataLayer((byte[])debug7.next().clone()) : new DataLayer(), debug8);
+            debug3.queueSectionData(debug4, SectionPos.of(debug1, debug10, debug2), debug11 ? new DataLayer((byte[])debug7.next().clone()) : new DataLayer(), debug8); // todo: NoSuchElementException on debug7#next
             this.level.setSectionDirtyWithNeighbors(debug1, debug10, debug2);
         }
     }
diff --git a/src/main/java/net/minecraft/client/renderer/ItemModelShaper.java b/src/main/java/net/minecraft/client/renderer/ItemModelShaper.java
index d620152536dd88cc985fb5a5473e8b241494678e..5b241e1dac09cfc85b9a43c48eaff8a1872b9c9a 100644
--- a/src/main/java/net/minecraft/client/renderer/ItemModelShaper.java
+++ b/src/main/java/net/minecraft/client/renderer/ItemModelShaper.java
@@ -40,7 +40,7 @@ public class ItemModelShaper
     
     public BakedModel getItemModel(final ItemStack debug1) {
         final BakedModel debug2 = this.getItemModel(debug1.getItem());
-        return (debug2 == null) ? this.modelManager.getMissingModel() : debug2;
+        return this.modelManager.getMissingModel(); //(debug2 == null) ? this.modelManager.getMissingModel() : debug2; // MagmaCube - todo: debug
     }
     
     @Nullable
diff --git a/src/main/java/net/minecraft/client/renderer/entity/ItemRenderer.java b/src/main/java/net/minecraft/client/renderer/entity/ItemRenderer.java
index 55189833defa456d57f1128d4bcdd9abe701f7f4..6c210557f965fed48e6860d5d3cd3a99680afc1a 100644
--- a/src/main/java/net/minecraft/client/renderer/entity/ItemRenderer.java
+++ b/src/main/java/net/minecraft/client/renderer/entity/ItemRenderer.java
@@ -93,41 +93,43 @@ implements ResourceManagerReloadListener {
         this.renderQuadList(debug5, debug6, debug1.getQuads(null, null, debug7), debug2, debug3, debug4);
     }
 
-    public void render(ItemStack debug1, ItemTransforms.TransformType debug2, boolean debug3, PoseStack debug4, MultiBufferSource debug5, int debug6, int debug7, BakedModel debug8) {
-        if (debug1.isEmpty()) {
+    // MagmaCube start - rename parameters and variables
+    public void render(ItemStack itemStack, ItemTransforms.TransformType transformType, boolean debug3, PoseStack poseStack, MultiBufferSource bufferSource, int debug6, int debug7, BakedModel model) {
+        if (itemStack.isEmpty()) {
             return;
         }
-        debug4.pushPose();
-        boolean debug9 = debug2 == ItemTransforms.TransformType.GUI || debug2 == ItemTransforms.TransformType.GROUND || debug2 == ItemTransforms.TransformType.FIXED;
-        if (debug1.getItem() == Items.TRIDENT && debug9) {
-            debug8 = this.itemModelShaper.getModelManager().getModel(new ModelResourceLocation("minecraft:trident#inventory"));
+        poseStack.pushPose();
+        boolean debug9 = transformType == ItemTransforms.TransformType.GUI || transformType == ItemTransforms.TransformType.GROUND || transformType == ItemTransforms.TransformType.FIXED;
+        if (itemStack.getItem() == Items.TRIDENT && debug9) {
+            model = this.itemModelShaper.getModelManager().getModel(new ModelResourceLocation("minecraft:trident#inventory"));
         }
-        debug8.getTransforms().getTransform(debug2).apply(debug3, debug4);
-        debug4.translate(-0.5, -0.5, -0.5);
-        if (debug8.isCustomRenderer() || debug1.getItem() == Items.TRIDENT && !debug9) {
-            BlockEntityWithoutLevelRenderer.instance.renderByItem(debug1, debug2, debug4, debug5, debug6, debug7);
+        model.getTransforms().getTransform(transformType).apply(debug3, poseStack);
+        poseStack.translate(-0.5, -0.5, -0.5);
+        if (model.isCustomRenderer() || itemStack.getItem() == Items.TRIDENT && !debug9) {
+            BlockEntityWithoutLevelRenderer.instance.renderByItem(itemStack, transformType, poseStack, bufferSource, debug6, debug7);
         } else {
             VertexConsumer debug12;
             Object debug11;
-            boolean debug10 = debug2 != ItemTransforms.TransformType.GUI && !debug2.firstPerson() && debug1.getItem() instanceof BlockItem ? !((debug11 = ((BlockItem)debug1.getItem()).getBlock()) instanceof HalfTransparentBlock) && !(debug11 instanceof StainedGlassPaneBlock) : true;
-            debug11 = ItemBlockRenderTypes.getRenderType(debug1, debug10);
-            if (debug1.getItem() == Items.COMPASS && debug1.hasFoil()) {
-                debug4.pushPose();
-                PoseStack.Pose debug13 = debug4.last();
-                if (debug2 == ItemTransforms.TransformType.GUI) {
+            boolean debug10 = transformType != ItemTransforms.TransformType.GUI && !transformType.firstPerson() && itemStack.getItem() instanceof BlockItem ? !((debug11 = ((BlockItem)itemStack.getItem()).getBlock()) instanceof HalfTransparentBlock) && !(debug11 instanceof StainedGlassPaneBlock) : true;
+            debug11 = ItemBlockRenderTypes.getRenderType(itemStack, debug10);
+            if (itemStack.getItem() == Items.COMPASS && itemStack.hasFoil()) {
+                poseStack.pushPose();
+                PoseStack.Pose debug13 = poseStack.last();
+                if (transformType == ItemTransforms.TransformType.GUI) {
                     debug13.pose().multiply(0.5f);
-                } else if (debug2.firstPerson()) {
+                } else if (transformType.firstPerson()) {
                     debug13.pose().multiply(0.75f);
                 }
-                debug12 = debug10 ? ItemRenderer.getCompassFoilBufferDirect(debug5, (RenderType)debug11, debug13) : ItemRenderer.getCompassFoilBuffer(debug5, (RenderType)debug11, debug13);
-                debug4.popPose();
+                debug12 = debug10 ? ItemRenderer.getCompassFoilBufferDirect(bufferSource, (RenderType)debug11, debug13) : ItemRenderer.getCompassFoilBuffer(bufferSource, (RenderType)debug11, debug13);
+                poseStack.popPose();
             } else {
-                debug12 = debug10 ? ItemRenderer.getFoilBufferDirect(debug5, (RenderType)debug11, true, debug1.hasFoil()) : ItemRenderer.getFoilBuffer(debug5, (RenderType)debug11, true, debug1.hasFoil());
+                debug12 = debug10 ? ItemRenderer.getFoilBufferDirect(bufferSource, (RenderType)debug11, true, itemStack.hasFoil()) : ItemRenderer.getFoilBuffer(bufferSource, (RenderType)debug11, true, itemStack.hasFoil());
             }
-            this.renderModelLists(debug8, debug1, debug6, debug7, debug4, debug12);
+            this.renderModelLists(model, itemStack, debug6, debug7, poseStack, debug12);
         }
-        debug4.popPose();
+        poseStack.popPose();
     }
+    // MagmaCube end - rename parameters and variables
 
     public static VertexConsumer getArmorFoilBuffer(MultiBufferSource debug0, RenderType debug1, boolean debug2, boolean debug3) {
         if (debug3) {
@@ -181,7 +183,7 @@ implements ResourceManagerReloadListener {
         BakedModel debug4 = debug5 == Items.TRIDENT ? this.itemModelShaper.getModelManager().getModel(new ModelResourceLocation("minecraft:trident_in_hand#inventory")) : this.itemModelShaper.getItemModel(debug1);
         ClientLevel debug6 = debug2 instanceof ClientLevel ? (ClientLevel)debug2 : null;
         BakedModel debug7 = debug4.getOverrides().resolve(debug4, debug1, debug6, debug3);
-        return debug7 == null ? this.itemModelShaper.getModelManager().getMissingModel() : debug7;
+        return this.itemModelShaper.getModelManager().getMissingModel();//debug7 == null ? this.itemModelShaper.getModelManager().getMissingModel() : debug7; // MagmaCube - todo: debug
     }
 
     public void renderStatic(ItemStack debug1, ItemTransforms.TransformType debug2, int debug3, int debug4, PoseStack debug5, MultiBufferSource debug6) {
diff --git a/src/main/java/net/minecraft/client/renderer/texture/TextureAtlas.java b/src/main/java/net/minecraft/client/renderer/texture/TextureAtlas.java
index ed6fdbee71010a123b2a55f03bf1982f6ec9fffa..1650f91a5f1b6557035d1cb42f5f6c472d8b86c8 100644
--- a/src/main/java/net/minecraft/client/renderer/texture/TextureAtlas.java
+++ b/src/main/java/net/minecraft/client/renderer/texture/TextureAtlas.java
@@ -77,7 +77,7 @@ implements Tickable {
     public void reload(Preparations debug1) {
         this.sprites.clear();
         this.sprites.addAll(debug1.sprites);
-        LOGGER.info("Created: {}x{}x{} {}-atlas", (Object)debug1.width, (Object)debug1.height, (Object)debug1.mipLevel, (Object)this.location);
+        LOGGER.info("Created: {}x{}x{} {}-atlas (Loaded {} sprites)", (Object)debug1.width, (Object)debug1.height, (Object)debug1.mipLevel, (Object)this.location, debug1.sprites.size()); // MagmaCube - show loaded sprites count
         TextureUtil.prepareImage(this.getId(), debug1.mipLevel, debug1.width, debug1.height);
         this.clearTextureData();
         for (TextureAtlasSprite debug3 : debug1.regions) {
diff --git a/src/main/java/net/minecraft/util/Mth.java b/src/main/java/net/minecraft/util/Mth.java
index 3bf894fd70db264fed5d50ac8bc8074f8a24bf6d..6c592893031d9a3ee3956b7b019b6e9ada26934e 100644
--- a/src/main/java/net/minecraft/util/Mth.java
+++ b/src/main/java/net/minecraft/util/Mth.java
@@ -376,8 +376,7 @@ public class Mth
         int debug2 = Float.floatToIntBits(debug0);
         debug2 = 1597463007 - (debug2 >> 1);
         debug0 = Float.intBitsToFloat(debug2);
-        debug0 *= 1.5f - debug * debug0 * debug0;
-        return debug0;
+        return debug0 * (1.5F - debug * debug0 * debug0); // MagmaCube - decompile fix
     }
     
     public static double fastInvSqrt(double debug0) {
@@ -385,8 +384,7 @@ public class Mth
         long debug2 = Double.doubleToRawLongBits(debug0);
         debug2 = 6910469410427058090L - (debug2 >> 1);
         debug0 = Double.longBitsToDouble(debug2);
-        debug0 *= 1.5 - debug * debug0 * debug0;
-        return debug0;
+        return debug0 * (1.5D - debug * debug0 * debug0); // MagmaCube - decompile fix
     }
     
     public static float fastInvCubeRoot(final float debug0) {
@@ -394,8 +392,7 @@ public class Mth
         debug = 1419967116 - debug / 3;
         float debug2 = Float.intBitsToFloat(debug);
         debug2 = 0.6666667f * debug2 + 1.0f / (3.0f * debug2 * debug2 * debug0);
-        debug2 = 0.6666667f * debug2 + 1.0f / (3.0f * debug2 * debug2 * debug0);
-        return debug2;
+        return 0.6666667f * debug2 + 1.0F / (3.0F * debug2 * debug2 * debug0); // MagmaCube - decompile fix
     }
     
     public static int hsvToRgb(final float debug0, final float debug1, final float debug2) {
@@ -455,12 +452,13 @@ public class Mth
     }
     
     public static int murmurHash3Mixer(int debug0) {
-        debug0 ^= debug0 >>> 16;
-        debug0 *= -2048144789;
-        debug0 ^= debug0 >>> 13;
-        debug0 *= -1028477387;
-        debug0 ^= debug0 >>> 16;
-        return debug0;
+        // MagmaCube start - fix math (not really)
+        debug0 = debug0 ^ debug0 >>> 16;
+        debug0 = debug0 * -2048144789;
+        debug0 = debug0 ^ debug0 >>> 13;
+        debug0 = debug0 * -1028477387;
+        return debug0 ^ debug0 >>> 16;
+        // MagmaCube end - fix math (not really)
     }
     
     public static int binarySearch(int debug0, final int debug1, final IntPredicate debug2) {
@@ -543,7 +541,7 @@ public class Mth
         SQRT_OF_TWO = sqrt(2.0f);
         SIN = Util.make(new float[65536], debug0 -> {
             for (int debug = 0; debug < debug0.length; ++debug) { // MagmaCube - decompile fix
-                debug0[debug] = (float)Math.sin(debug * 3.141592653589793 * 2.0 / 65536.0);
+                debug0[debug] = (float)Math.sin(debug * Math.PI * 2.0 / 65536.0); // MagmaCube - decompile fix
             }
             return;
         });
